/**
 * Combined by jsDelivr.
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/chenyfan-oss@2.0.3/live2dcubismpixi.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var LIVE2DCUBISMPIXI,__extends=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function s(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(s.prototype=r.prototype,new s)}}();!function(e){var t=function(e){function t(t,s,a,o,n,l){var u=e.call(this)||this;if(u._coreModel=t,u._textures=s,u._animator=a,u._physicsRig=o,u._userData=n,u._groups=l,u._animator.groups=u._groups,null==u._coreModel)return u;u._meshes=new Array(u._coreModel.drawables.ids.length);for(var d=0;d<u._meshes.length;++d){for(var c=u._coreModel.drawables.vertexUvs[d].slice(0,u._coreModel.drawables.vertexUvs[d].length),h=1;h<c.length;h+=2)c[h]=1-c[h];if(u._meshes[d]=new i(s[u._coreModel.drawables.textureIndices[d]],u._coreModel.drawables.vertexPositions[d],c,u._coreModel.drawables.indices[d],PIXI.DRAW_MODES.TRIANGLES),u._meshes[d].name=u._coreModel.drawables.ids[d],u._meshes[d].scale.y*=-1,u._meshes[d].isCulling=!LIVE2DCUBISMCORE.Utils.hasIsDoubleSidedBit(u._coreModel.drawables.constantFlags[d]),LIVE2DCUBISMCORE.Utils.hasBlendAdditiveBit(u._coreModel.drawables.constantFlags[d]))if(u._coreModel.drawables.maskCounts[d]>0){var _=new PIXI.Filter;_.blendMode=PIXI.BLEND_MODES.ADD,u._meshes[d].filters=[_]}else u._meshes[d].blendMode=PIXI.BLEND_MODES.ADD;else if(LIVE2DCUBISMCORE.Utils.hasBlendMultiplicativeBit(u._coreModel.drawables.constantFlags[d]))if(u._coreModel.drawables.maskCounts[d]>0){var m=new PIXI.Filter;m.blendMode=PIXI.BLEND_MODES.MULTIPLY,u._meshes[d].filters=[m]}else u._meshes[d].blendMode=PIXI.BLEND_MODES.MULTIPLY;u.addChild(u._meshes[d])}return u._maskSpriteContainer=new r(t,u),u}return __extends(t,e),Object.defineProperty(t.prototype,"parameters",{get:function(){return this._coreModel.parameters},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"parts",{get:function(){return this._coreModel.parts},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"drawables",{get:function(){return this._coreModel.drawables},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"textures",{get:function(){return this._textures},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"animator",{get:function(){return this._animator},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"userData",{get:function(){return this._userData},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"meshes",{get:function(){return this._meshes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"masks",{get:function(){return this._maskSpriteContainer},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"groups",{get:function(){return this._groups},enumerable:!0,configurable:!0}),t.prototype.update=function(e){var t=this,r=.016*e;this._animator.updateAndEvaluate(r),this._physicsRig&&this._physicsRig.updateAndEvaluate(r),this._coreModel.update();for(var s=!1,i=0;i<this._meshes.length;++i)this._meshes[i].alpha=this._coreModel.drawables.opacities[i],this._meshes[i].visible=LIVE2DCUBISMCORE.Utils.hasIsVisibleBit(this._coreModel.drawables.dynamicFlags[i]),LIVE2DCUBISMCORE.Utils.hasVertexPositionsDidChangeBit(this._coreModel.drawables.dynamicFlags[i])&&(this._meshes[i].vertices=this._coreModel.drawables.vertexPositions[i],this._meshes[i].dirtyVertex=!0),LIVE2DCUBISMCORE.Utils.hasRenderOrderDidChangeBit(this._coreModel.drawables.dynamicFlags[i])&&(s=!0);s&&this.children.sort((function(e,r){var s=t._meshes.indexOf(e),i=t._meshes.indexOf(r);return t._coreModel.drawables.renderOrders[s]-t._coreModel.drawables.renderOrders[i]})),this._coreModel.drawables.resetDynamicFlags()},t.prototype.destroy=function(t){null!=this._coreModel&&this._coreModel.release(),e.prototype.destroy.call(this,t),this.masks.destroy(),this._meshes.forEach((function(e){e.destroy()})),(1==t||t.texture)&&this._textures.forEach((function(e){e.destroy()}))},t.prototype.getModelMeshById=function(e){if(null==this._meshes)return null;for(var t=0,r=this._meshes;t<r.length;t++){var s=r[t];if(s.name===e)return s}return null},t._create=function(e,r,s,i,a,o){void 0===i&&(i=null),void 0===a&&(a=null),void 0===o&&(o=null);var n=new t(e,r,s,i,a,o);return n.isValid?n:(n.destroy(),null)},Object.defineProperty(t.prototype,"isValid",{get:function(){return null!=this._coreModel},enumerable:!0,configurable:!0}),t}(PIXI.Container);e.Model=t;var r=function(e){function t(t,r){var s=e.call(this)||this;s._maskShaderVertSrc=new String("\n            attribute vec2 aVertexPosition;\n            attribute vec2 aTextureCoord;\n            uniform mat3 projectionMatrix;\n            varying vec2 vTextureCoord;\n            void main(void){\n                gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n                vTextureCoord = aTextureCoord;\n            }\n            "),s._maskShaderFragSrc=new String("\n            varying vec2 vTextureCoord;\n            uniform sampler2D uSampler;\n            void main(void){\n                vec4 c = texture2D(uSampler, vTextureCoord);\n                c.r = c.a;\n                c.g = 0.0;\n                c.b = 0.0;\n                gl_FragColor = c;\n            }\n            "),s._maskShader=new PIXI.Filter(s._maskShaderVertSrc.toString(),s._maskShaderFragSrc.toString());var a=t.drawables.maskCounts,o=t.drawables.masks;s._maskMeshContainers=new Array,s._maskTextures=new Array,s._maskSprites=new Array;for(var n=0;n<r.meshes.length;++n)if(a[n]>0){for(var l=new PIXI.Container,u=0;u<o[n].length;++u){var d=t.drawables.masks[n][u],c=new i(r.meshes[d].texture,r.meshes[d].vertices,r.meshes[d].uvs,r.meshes[d].indices,PIXI.DRAW_MODES.TRIANGLES);c.name=r.meshes[d].name,c.transform=r.meshes[d].transform,c.worldTransform=r.meshes[d].worldTransform,c.localTransform=r.meshes[d].localTransform,c.isCulling=r.meshes[d].isCulling,c.isMaskMesh=!0,c.filters=[s._maskShader],l.addChild(c)}l.transform=r.transform,l.worldTransform=r.worldTransform,l.localTransform=r.localTransform,s._maskMeshContainers.push(l);var h=PIXI.RenderTexture.create(0,0);s._maskTextures.push(h);var _=new PIXI.Sprite(h);s._maskSprites.push(_),s.addChild(_),r.meshes[n].mask=_}return s}return __extends(t,e),Object.defineProperty(t.prototype,"maskSprites",{get:function(){return this._maskSprites},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"maskMeshes",{get:function(){return this._maskMeshContainers},enumerable:!0,configurable:!0}),t.prototype.destroy=function(e){this._maskSprites.forEach((function(e){e.destroy()})),this._maskTextures.forEach((function(e){e.destroy()})),this._maskMeshContainers.forEach((function(e){e.destroy()})),this._maskShader=null},t.prototype.update=function(e){for(var t=0;t<this._maskSprites.length;++t)e.render(this._maskMeshContainers[t],this._maskTextures[t],!0,null,!1)},t.prototype.resize=function(e,t){for(var r=0;r<this._maskTextures.length;++r)this._maskTextures[r].resize(e,t,!1)},t}(PIXI.Container);e.MaskSpriteContainer=r;var s=function(){function e(){this._textures=new Array,this._timeScale=1,this._animatorBuilder=new LIVE2DCUBISMFRAMEWORK.AnimatorBuilder}return e.prototype.setMoc=function(e){return this._moc=e,this},e.prototype.setTimeScale=function(e){return this._timeScale=e,this},e.prototype.setPhysics3Json=function(e){return this._physicsRigBuilder||(this._physicsRigBuilder=new LIVE2DCUBISMFRAMEWORK.PhysicsRigBuilder),this._physicsRigBuilder.setPhysics3Json(e),this},e.prototype.setUserData3Json=function(e){return this._userDataBuilder||(this._userDataBuilder=new LIVE2DCUBISMFRAMEWORK.UserDataBuilder),this._userDataBuilder.setUserData3Json(e),this},e.prototype.addTexture=function(e,t){return this._textures.splice(e,0,t),this},e.prototype.addAnimatorLayer=function(e,t,r){return void 0===t&&(t=LIVE2DCUBISMFRAMEWORK.BuiltinAnimationBlenders.OVERRIDE),void 0===r&&(r=1),this._animatorBuilder.addLayer(e,t,r),this},e.prototype.addGroups=function(e){return this._groups=e,this},e.prototype.buildFromModel3Json=function(e,t,r){var s=this,i=t.url,a=i.substring(0,i.lastIndexOf("/")+1),o=0;void 0!==t.data.FileReferences.Moc&&e.add("moc",a+t.data.FileReferences.Moc,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.BUFFER}),void 0!==t.data.FileReferences.Textures&&t.data.FileReferences.Textures.forEach((function(t){e.add("texture"+o,a+t),o++})),void 0!==t.data.FileReferences.Physics&&e.add("physics",a+t.data.FileReferences.Physics,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON}),void 0!==t.data.FileReferences.UserData&&e.add("userdata",a+t.data.FileReferences.UserData,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON}),t.data.Groups,this._groups=LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(t.data),e.load((function(e,t){if(void 0!==t.moc&&s.setMoc(LIVE2DCUBISMCORE.Moc.fromArrayBuffer(t.moc.data)),void 0!==t.texture0)for(var i=0;i<o;i++)s.addTexture(i,t["texture"+i].texture);void 0!==t.physics&&s.setPhysics3Json(t.physics.data),void 0!==t.userdata&&s.setUserData3Json(t.userdata.data);var a=s.build();r(a)}))},e.prototype.build=function(){var e=LIVE2DCUBISMCORE.Model.fromMoc(this._moc);if(null==e)return null;var r=this._animatorBuilder.setTarget(e).setTimeScale(this._timeScale).build(),s=null;this._physicsRigBuilder&&(s=this._physicsRigBuilder.setTarget(e).setTimeScale(this._timeScale).build());var i=null;return this._userDataBuilder&&(i=this._userDataBuilder.setTarget(e).build()),t._create(e,this._textures,r,s,i,this._groups)},e}();e.ModelBuilder=s;var i=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.isCulling=!1,t.isMaskMesh=!1,t}return __extends(t,e),t.prototype._renderWebGL=function(t){!0===this.isMaskMesh?t.state.setFrontFace(1):t.state.setFrontFace(0),!0===this.isCulling?t.state.setCullFace(1):t.state.setCullFace(0),e.prototype._renderWebGL.call(this,t),t.state.setFrontFace(0)},t}(PIXI.mesh.Mesh);e.CubismMesh=i}(LIVE2DCUBISMPIXI||(LIVE2DCUBISMPIXI={}));
//# sourceMappingURL=/sm/9d718b8dc26ae91cdedacd40d78fb59a8ed0c69e5db35d0e64b4b1449b828427.map